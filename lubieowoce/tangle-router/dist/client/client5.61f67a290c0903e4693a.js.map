{"version":3,"file":"client5.61f67a290c0903e4693a.js","mappings":";;;;;;;;;;;;;;;;;;AAAA;AACsF;AAC1C;AACZ;AACI;AAC7B,wBAAwB,oBAAoB;AACnD,sCAAsC,+CAAQ;AAC9C,IAAI,gDAAS;AACb;AACA;AACA,KAAK;AACL;AACA,YAAY,uDAAK,CAAC,uDAAS,IAAI,WAAW,sDAAI,gBAAgB;AAC9D,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG,sDAAI,CAAC,yCAAI,IAAI;AAC3B,2BAA2B,6CAAS;AACpC;AACA;AACA;AACA;AACA,iBAAiB,gCAAgC,IAAI;AACrD;AACA,uBAAuB,KAAK;AAC5B,WAAW,sDAAI,YAAY,2BAA2B,eAAe;AACrE;;;;;;;;;;;;;;;;;;ACnCgD;AACzC,gBAAgB,8DAA8D;AACrF,YAAY,sDAAI,gBAAgB;AAChC;AACA;AACA;AACA;AACA;AACA,SAAS,sBAAsB;AAC/B;AACO,gBAAgB,+FAA+F;AACtH,YAAY,sDAAI,UAAU;AAC1B;AACA;AACA,2BAA2B,YAAY;AACvC;AACA;AACA;AACA,SAAS,sBAAsB;AAC/B;AACO,iBAAiB,mDAAmD;AAC3E,YAAY,sDAAI,UAAU;AAC1B;AACA;AACA;AACA;AACA,SAAS,sBAAsB;AAC/B;;;;;;;;;;;;;;;;;AC3BO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL","sources":["webpack://rsc-example-1/./src/components/animate-on-mount.tsx","webpack://rsc-example-1/./src/components/common.tsx","webpack://rsc-example-1/./src/components/theme.ts"],"sourcesContent":["\"use client\";\nimport { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useEffect, useState } from \"react\";\nimport { Text } from \"./common\";\nimport { colorSets } from \"./theme\";\nexport function FlashOnMount({ children, ...props }) {\n    const [isMounted, setIsMounted] = useState(false);\n    useEffect(() => {\n        setIsMounted(true);\n        return () => setIsMounted(false);\n    }, []);\n    const animation = \"timestamp-entry-animation\";\n    return (_jsxs(_Fragment, { children: [_jsx(InlineStyle, { css: `\n          @keyframes ${animation} {\n            0% {\n              opacity: 1;\n              box-shadow: 0 0 8px rgba(255, 255, 255, 100);\n              background-color: rgba(255, 255, 255, 100);\n            }\n            100% {\n              opacity: 0.5;\n              box-shadow: 0 0 8px rgba(255, 255, 255, 0);\n              background-color: rgba(255, 255, 255, 0);\n            }\n          }\n        ` }), _jsx(Text, { as: \"small\", style: {\n                    color: colorSets.server.color,\n                    animationName: animation,\n                    animationDuration: \"700ms\",\n                    animationFillMode: \"both\",\n                    animationPlayState: isMounted ? \"running\" : \"paused\",\n                }, ...props, children: children })] }));\n}\nfunction InlineStyle({ css }) {\n    return _jsx(\"style\", { dangerouslySetInnerHTML: { __html: css } });\n}\n","import { jsx as _jsx } from \"react/jsx-runtime\";\nexport function Text({ as: AsComponent = \"div\", children, color, fontWeight, style, }) {\n    return (_jsx(AsComponent, { style: {\n            ...style,\n            lineHeight: \"1.5\",\n            fontFamily: \"sans-serif\",\n            color,\n            fontWeight,\n        }, children: children }));\n}\nexport function Card({ children, color, borderColor = \"lightgrey\", backgroundColor = \"unset\", borderStyle = \"solid\", }) {\n    return (_jsx(\"div\", { style: {\n            padding: \"16px\",\n            borderRadius: \"8px\",\n            border: `2px ${borderStyle}`,\n            color,\n            borderColor,\n            backgroundColor,\n        }, children: children }));\n}\nexport function Stack({ children, spacing = \"16px\", direction = \"column\", }) {\n    return (_jsx(\"div\", { style: {\n            display: \"flex\",\n            flexDirection: direction,\n            gap: spacing,\n            alignItems: \"stretch\",\n        }, children: children }));\n}\n","export const themeVariables = {\n    \"--color-text-client\": \"#2b6374\",\n    \"--color-border-client\": \"#a6dfec\",\n    \"--color-bg-client\": \"#d3f5f8\",\n    \"--color-text-server\": \"#80755c\",\n    \"--color-border-server\": \"#f2d694\",\n    \"--color-bg-server\": \"#fffadd\",\n    \"--color-text-loading\": \"#989898\",\n    \"--color-border-loading\": \"#cdcdcd\",\n    \"--color-bg-loading\": \"#dedede\",\n};\nexport const colors = {\n    textServer: \"var(--color-text-server)\",\n    borderServer: \"var(--color-border-server)\",\n    bgServer: \"var(--color-bg-server)\",\n    textClient: \"var(--color-text-client)\",\n    borderClient: \"var(--color-border-client)\",\n    bgClient: \"var(--color-bg-client)\",\n    textLoading: \"var(--color-text-loading)\",\n    borderLoading: \"var(--color-border-loading)\",\n    bgLoading: \"var(--color-bg-loading)\",\n};\nexport const colorSets = {\n    server: {\n        color: colors.textServer,\n        borderColor: colors.borderServer,\n        backgroundColor: colors.bgServer,\n    },\n    client: {\n        color: colors.textClient,\n        borderColor: colors.borderClient,\n        backgroundColor: colors.bgClient,\n    },\n    loading: {\n        color: colors.textLoading,\n        borderColor: colors.borderLoading,\n        backgroundColor: colors.bgLoading,\n    },\n};\n"],"names":[],"sourceRoot":""}